 git config --global credential.helper wincred
 git config --global user.name "<John Doe>"
 git config --global user.email <johndoe@example.com>

//F1 on VS
>git:clone
https://Ningzen@dev.azure.com/Ningzen/eShopOnWeb/_git/eShopOnWeb

With the SOURCE CONTROL tab selected, at the top of the pane, in the textbox, type My commit as the commit message and press Ctrl+Enter to commit it locally.

>Git: Delete Branch
//This command will update the origin branches in the local snapshot and delete those that are no longer there.
>Git: Fetch (Prune)


//to restore branch from Ado
tab All in Branches, input name of branch in filter search. normally cannot see

//The repo .git\hooks folder isn't committed into source control. You may wonder how you share the goodness of the automated scripts you create with the team.
Git config --global core.hooksPath '~/.githooks'

//overwrite hooks
Git commit --no-verify

//scan local repo for keywords and throw

#!C:/Program\ Files/Git/usr/bin/sh.exe
matches=$(git diff-index --patch HEAD | grep '^+' | grep -Pi 'password|keyword2|keyword3')
if [ ! -z "$matches" ]
then
    cat <<\EOT
Error: Words from the blocked list were present in the diff:
EOT
    echo $matches
    exit 1
fi

//create service principal on azure cloud shell
subscriptionName=$(az account show --query name --output tsv)
subscriptionId=$(az account show --query id --output tsv)
echo $subscriptionName
echo $subscriptionId

az ad sp create-for-rbac --name sp-az400-azdo --role contributor --scopes /subscriptions/$subscriptionId
// The command will generate a JSON output. Copy the output to text file.

//to the Azure DevOps eShopOnWeb project. Click on Project Settings>Service Connections (under Pipelines) and New Service Connection.

https://dev.azure.com/Ningzen/eShopOnWeb/_git/eShopOnWeb?path=/.ado/eshoponweb-ci-docker.yml
